user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

  # connection_upgrade is importantt for the proper treatment
  # of websockets
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  map "$http_x_auth_token" $auth_var {
    default 8081;
    # anything provided for X-Auth-Token will bypass auth
    "~*" 8080;
  }

# this server block uses $auth_var to determine if authentication is necessary
# and then forward to the appropriate service
server {
   listen 80 default_server;
   server_name internal.yourcompany.com;

   location / {
      proxy_set_header Host                    $host;
      proxy_set_header X-Real-IP               $remote_addr;
      proxy_set_header X-Scheme                $scheme;
      proxy_set_header X-RSC-Request $scheme://$host:$server_port$request_uri;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_http_version 1.1;
      proxy_pass http://127.0.0.1:$auth_var;
      proxy_redirect http://oauth2-connect:3939/ $scheme://$host:$server_port;
   }
}

# this server block proxies requests to connect that do not need authentication
# it is important that only appropriate traffic is routed here
# - honestly, for more security, we should probably strip the secret header on this route
server {
    listen 8080 default_server;
    
    server_name internal.yourcompany.com;
     location / {
       proxy_pass http://oauth2-connect:3939;
       proxy_set_header Host                    $host;
       proxy_set_header X-Real-IP               $remote_addr;
       proxy_set_header X-Scheme                $scheme;
     }
}

# this server block proxies requests to connect that need authentication
# authentication happens via auth_request to oauth2_proxy
server {
  listen 8081 default_server;
  server_name internal.yourcompany.com;

  # these /oauth2/ location blocks make the oauth2-proxy service 
  # accessible for an auth_request call at location /
  location /oauth2/ {
    proxy_pass       http://oauth2-proxy:80;
    proxy_set_header Host                    $host;
    proxy_set_header X-Real-IP               $remote_addr;
    proxy_set_header X-Scheme                $scheme;
    proxy_set_header X-Auth-Request-Redirect $request_uri;
  }

  location /oauth2/auth {
    proxy_pass       http://oauth2-proxy:80;
    proxy_set_header Host             $host;
    proxy_set_header X-Real-IP        $remote_addr;
    proxy_set_header X-Scheme         $scheme;
    # nginx auth_request includes headers but not body
    proxy_set_header Content-Length   "";
    proxy_pass_request_body           off;
  }


  location / {
    # checks authentication
    auth_request /oauth2/auth;
    error_page 401 = /oauth2/sign_in;

    # handles connection upgrade for websockets
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_http_version 1.1;

    # pass information via X-Secret-User-Header and X-Email headers to backend,
    # requires running oauth2-proxy with --set-xauthrequest flag
    auth_request_set $user   $upstream_http_x_auth_request_user;
    auth_request_set $email  $upstream_http_x_auth_request_email;
    proxy_set_header X-Secret-User-Header $user;
    proxy_set_header X-Email $email;

    # if you enabled --cookie-refresh, this is needed for it to work with auth_request
    # auth_request_set $auth_cookie $upstream_http_set_cookie;
    # add_header Set-Cookie $auth_cookie;

    # passes traffic to Connect
    proxy_pass http://oauth2-connect:3939;
  }
}
 
}
